# Generated by Django 5.1.6 on 2025-03-01 11:06

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Character',
            fields=[
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.MaxLengthValidator(100)])),
                ('status', models.CharField(choices=[('D', 'Dead'), ('A', 'Alive'), ('U', 'Unknown')], default='U', max_length=1, verbose_name='Estado do persoganem')),
                ('species', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.MaxLengthValidator(100)], verbose_name='Espécie')),
                ('subspecies', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.MaxLengthValidator(100)], verbose_name='Subspécie')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('U', 'Unknown'), ('G', 'Gernderless')], default='U', max_length=1, verbose_name='Genero do personagem')),
                ('image_url', models.URLField(blank=True, null=True, verbose_name='URL da imagem')),
                ('url', models.URLField(blank=True, null=True, verbose_name='URL do porsonagem')),
                ('created', models.DateTimeField(verbose_name='Data de criação do personagem no banco de dados consumido')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.MaxLengthValidator(100)], verbose_name='Nome da localização')),
                ('location_type', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.MaxLengthValidator(100)], verbose_name='Tipo de localização')),
                ('dimension', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.MaxLengthValidator(100)], verbose_name='Dimensão da localização')),
                ('url', models.URLField(blank=True, null=True, verbose_name='URL da Localização')),
                ('created', models.DateTimeField(verbose_name='Data de criação do localização no banco de dados consumido')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Episode',
            fields=[
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.MaxLengthValidator(100)], verbose_name='Nome do episodio')),
                ('air_date', models.DateField(verbose_name='Data de estreia do episodio')),
                ('episode_code', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.MaxLengthValidator(100)], verbose_name='Código do episodio')),
                ('url', models.URLField(blank=True, null=True, verbose_name='URL do episodio')),
                ('created', models.DateTimeField(verbose_name='Data de criação do episodio no banco de dados')),
                ('characters', models.ManyToManyField(related_name='characters', to='character.character', verbose_name='Personagens')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='character',
            name='episode',
            field=models.ManyToManyField(related_name='episode', to='character.episode', verbose_name='Episodio onde personagem atua'),
        ),
        migrations.AddField(
            model_name='character',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='location', to='character.location', verbose_name='Localização atual do personagem'),
        ),
        migrations.AddField(
            model_name='character',
            name='origin',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='origin', to='character.location', verbose_name='Localização de origem do personagem'),
        ),
    ]
